name: Go Test Workflow

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Setup Go
      uses: actions/setup-go@v2
      with:
        go-version: '^1.19'
    
    - name: Checkout Code
      uses: actions/checkout@v4
      with:
        ref: ${{ github.event.pull_request.head.ref }}
      
    - name: Get dependencies
      run: |
        go get -v -t -d ./...

    - name: Fetch base branch
      if: ${{ github.event_name == 'pull_request' }}
      run: git fetch origin ${{ github.base_ref }}
      
    - name: Run tests
      run: |
        go test ./... -cover
        
    - name: golangci-lint
      if: ${{ github.event_name == 'pull_request' }}
      uses: golangci/golangci-lint-action@v3
      with:
        version: latest
        args: checkstyle --timeout 600s --max-issues-per-linter=0 --max-same-issues=0 --new-from-rev=origin/${{ github.base_ref }} ./... > golanglint.xml
        
    - name: SonarCloud Scan
      uses: sonarsource/sonarcloud-github-action@master
      with:
          args: >
            -Dsonar.organization=tyktechnologies
            -Dsonar.projectKey=TykTechnologies_tyk-identity-broker
            -Dsonar.sources=.
            -Dsonar.exclusions=ci/**
            -Dsonar.coverage.exclusions=**/*_test.go,**/mock/*
            -Dsonar.test.inclusions=**/*_test.go
            -Dsonar.tests=.
            -Dsonar.go.coverage.reportPaths=*.cov
            -Dsonar.go.golangci-lint.reportPaths=golanglint.xml
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}